<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!-- ~ Copyright 2013 Goldman Sachs. ~ ~ Licensed under the Apache License, 
	Version 2.0 (the "License"); ~ you may not use this file except in compliance 
	with the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, software ~ 
	distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the 
	License for the specific language governing permissions and ~ limitations 
	under the License. -->

<!-- Checkstyle is very configurable. Be sure to read the documentation at -->
<!-- http://checkstyle.sf.net (or in your downloaded distribution). -->

<!-- Most Checks are configurable, be sure to consult the documentation. -->

<!-- To completely disable a check, just comment it out or delete it from 
	the file. -->

<module name="Checker">

	<property name="severity" value="error" />

	<!-- If you set the basedir property below, then all reported file names 
		will be relative to the specified directory. See http://checkstyle.sourceforge.net/5.x/config.html#Checker 
		<property name="basedir" value="${basedir}"/> -->

	<module name="TreeWalker">
		<property name="tabWidth" value="4" />

		<property name="cacheFile" value="build/checkstyleCache" />

		<!-- Checks for Naming Conventions. -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName" />
		<module name="LocalFinalVariableName" />
		<module name="LocalVariableName" />
		<module name="MemberName" />
		<module name="PackageName" />
		<module name="StaticVariableName" />
		<module name="TypeName" />
		<module name="ParameterName" />

		<module name="MethodName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
		</module>
		<module name="MethodTypeParameterName">
			<property name="format" value="^[A-Z0-9]+$" />
		</module>

		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
		</module>

		<!-- Checks for imports -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<module name="AvoidStarImport">
			<property name="allowStaticMemberImports" value="true" />
		</module>
		<module name="IllegalImport" /> <!-- defaults to sun.* packages -->
		<module name="RedundantImport" />
		<module name="UnusedImports" />

		<!-- Checks for whitespace -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad">
			<property name="option" value="space" />
		</module>
		<module name="MethodParamPad" />
		<module name="NoWhitespaceAfter">
			<property name="tokens"
				value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS" />
		</module>
		<module name="NoWhitespaceBefore" />
		<module name="OperatorWrap" />
		<module name="ParenPad" />
		<module name="TypecastParenPad" />
		<module name="WhitespaceAfter" />
		<module name="WhitespaceAround">
			<property name="tokens"
				value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND" />
		</module>

		<!-- Modifier Checks -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<module name="ModifierOrder" />
		<module name="RedundantModifier" />


		<!-- Checks for blocks. You know, those {}'s -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="AvoidNestedBlocks" />
		<module name="EmptyBlock" />
		<module name="LeftCurly">
			<module name="NeedBraces" />
			<property name="option" value="nl" />
		</module>
		<module name="RightCurly">
			<property name="option" value="alone" />
		</module>

		<!-- Checks for common coding problems -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<module name="EmptyStatement" />
		<module name="AvoidInlineConditionals" />
		<!-- Effective Java Item 8 - Always override hashCode when you override 
			equals -->
		<module name="EqualsHashCode" />
		<module name="HiddenField" />
		<!--<module name="HiddenField"> -->
		<!--<property name="severity" value="warning" /> -->
		<!--<property name="ignoreSetter" value="true" /> -->
		<!--<property name="ignoreConstructorParameter" value="true" /> -->
		<!--</module> -->
		<!-- Effective Java Item 4 - Avoid creating duplicate objects -->
		<module name="IllegalInstantiation">
			<property name="severity" value="warning" />
			<property name="classes"
				value="java.lang.Boolean,java.lang.Integer,java.lang.Long,java.lang.Short,java.lang.Character,java.lang.Byte,java.util.Timer,java.util.TimerTask" />
		</module>
		<module name="InnerAssignment" />
		<module name="MagicNumber" />
		<module name="MissingSwitchDefault" />
		<module name="RedundantThrows">
			<property name="logLoadErrors" value="true" />
			<property name="suppressLoadErrors" value="true" />
		</module>
		<module name="SimplifyBooleanExpression" />
		<module name="SimplifyBooleanReturn" />

		<!-- Checks for class design -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<module name="DesignForExtension" />
		<module name="FinalClass" />
		<module name="HideUtilityClassConstructor" />
		<!-- Effective Java Item 17 - Use interfaces only to define types -->
		<module name="InterfaceIsType">
			<property name="severity" value="warning" />
		</module>
		<module name="VisibilityModifier" />

		<!-- Miscellaneous other checks. -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle" />
		<module name="FinalParameters" />
		<module name="TodoComment" />
		<module name="UpperEll" />
		<module name="Regexp">
			<property name="illegalPattern" value="true" />
			<property name="format" value="System\.out\.println" />
			<property name="message" value="System.out.println." />
		</module>
		<!-- <module name="Regexp"> <property name="illegalPattern" value="true" 
			/> <property name="format" value="[ ]+$" /> <property name="message" value="Line 
			has trailing spaces." /> </module> -->

		<!-- Effective Java Item 6 - Avoid finalizers -->
		<module name="NoFinalizer" />
		<module name="EqualsAvoidNull" />
		<module name="GenericWhitespace" />
		<module name="IllegalThrows" />
		<module name="SuperFinalize" />
		<module name="SuperClone">
			<property name="severity" value="warning" />
		</module>
		<module name="CovariantEquals" />
		<module name="AvoidStaticImport">
			<property name="excludes"
				value="org.junit.Assert.*,org.hamcrest.CoreMatchers.*,com.gs.collections.impl.test.Verify.*,com.gs.collections.impl.factory.Iterables.*" />
		</module>
		<module name="MissingDeprecated" />
		<module name="AnnotationUseStyle" />
		<module name="DeclarationOrder" />
		<module name="DefaultComesLast" />
		<module name="FallThrough" />
		<module name="ImportOrder">
			<property name="groups" value="java,javax" />
			<property name="separated" value="true" />
		</module>
		<module name="MultipleVariableDeclarations" />
		<module name="MutableException" />
		<module name="PackageDeclaration" />
		<module name="MissingOverride">
			<property name="javaFiveCompatibility" value="true" />
		</module>

		<!-- Checks for Javadoc comments. -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocMethod">
			<property name="logLoadErrors" value="true" />
			<property name="suppressLoadErrors" value="true" />
		</module>
		<module name="JavadocType" />
		<module name="JavadocVariable" />
		<module name="JavadocStyle" />

		<!-- Checks for Size Violations. -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="MethodLength" />
		<module name="ParameterNumber" />
		<module name="LineLength" />

	</module>


	<!-- Checks whether files end with a new line. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
	<module name="NewlineAtEndOfFile">
		<property name="lineSeparator" value="system" />
		<property name="fileExtensions" value="java, xml" />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\{\r\r" />
		<property name="message"
			value="First line after opening a scope may not be blank." />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\{\n\n" />
		<property name="message"

			value="First line after opening a scope may not be blank." />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\{\r\n\r\n" />
		<property name="message"

			value="First line after opening a scope may not be blank." />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\r\r[ ]*\}" />
		<property name="message"

			value="Last line before closing a scope bay not be blank." />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\n\n[ ]*\}" />
		<property name="message"

			value="Last line before closing a scope bay not be blank." />
	</module>

	<module name="RegexpMultiline">
		<property name="format" value="\r\n\r\n[ ]*\}" />
		<property name="message"

			value="Last line before closing a scope bay not be blank." />
	</module>

	<!-- Checks that a package-info.java file exists for each package. -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
	<module name="JavadocPackage" />

	<!-- Checks that property files contain the same keys. -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
	<module name="Translation" />

	<!-- Checks for Size Violations. -->
	<!-- See http://checkstyle.sf.net/config_sizes.html -->
	<module name="FileLength" />

	<!-- Checks for whitespace -->
	<!-- See http://checkstyle.sf.net/config_whitespace.html -->
	<module name="FileTabCharacter" />

	<!-- Miscellaneous other checks. -->
	<!-- See http://checkstyle.sf.net/config_misc.html -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$" />
		<property name="minimum" value="0" />
		<property name="maximum" value="0" />
		<property name="message" value="Line has trailing spaces." />
	</module>

	<!-- Checks for Headers -->
	<!-- See http://checkstyle.sf.net/config_header.html -->
	<module name="Header">
		<property name="headerFile" value="${basedir}/${header.file}" />
		<property name="fileExtensions" value="java" />
		<!--<property name="ignoreLines" value="2"/> -->
	</module>
	<!-- <module name="RegexpHeader"> <property name="headerFile" value="${basedir}/${header.file}" 
		/> <property name="multiLines" value="17, 18, 19, 21, 22" /> <property name="fileExtensions" 
		value="java, scala" /> </module> -->

	<module name="SuppressionFilter">
		<property name="file" value="${basedir}/${suppressions.file}" />
	</module>

</module>

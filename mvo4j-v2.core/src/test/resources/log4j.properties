#############################################
# Configs
#############################################
# Usando 2 appenders, 1 para logar no console, outro para um arquivo
log4j.rootCategory=error, stdout
#log4j.rootCategory=error, stdout, fileOut

# Explicita a heran\u00e7a do nivel de prioridade
#log4j.category.your.category.name=INHERITED

# Primeiro appender - Escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern que mostra o nome do arquivo e numero da linha.
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

# Segundo appender - Escreve em um arquivo
#log4j.appender.fileOut =org.apache.log4j.RollingFileAppender
#log4j.appender.fileOut.File=example.log

# Controla o tamanho maximo do arquivo
#log4j.appender.fileOut.MaxFileSize=100KB

# Faz backup dos arquivos de log (apenas 1)
#log4j.appender.fileOut.MaxBackupIndex=1

#log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout
#log4j.appender.fileOut.layout.ConversionPattern=%p %t %c - %m%n

#############################################
# LOGS
#############################################
# Imprime somente mensagens com 'priority' WARN ou mais alto para o logger
# Ordem: DEBUG - INFO - WARN - ERROR - FATAL

#############################################

# Spring 
log4j.logger.org.springframework=DEBUG

# JavaAssist 
log4j.logger.javassist=DEBUG

# JUnit 
log4j.logger.org.junit=DEBUG

# Confiança
log4j.logger.br.cd=DEBUG

# Hibernate
log4j.logger.org.hibernate=DEBUG

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=info

### log just the SQL
log4j.logger.org.hibernate.SQL=ingp

### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=trace

### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=info

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=debug

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace

#############################################
# Spring Security
log4j.logger.org.springframework.security=info
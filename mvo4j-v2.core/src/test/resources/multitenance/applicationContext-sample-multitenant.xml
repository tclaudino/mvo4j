<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="jdbc"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:database.properties" />
	</bean>

	<bean id="ds1" parent="parentDataSource">
		<property name="driverClassName" value="#{jdbc['database.driver']}" />
		<property name="url" value="#{jdbc['database.url']}" />
		<property name="username" value="#{jdbc['database.user']}" />
		<property name="password" value="#{jdbc['database.pass']}" />
	</bean>

	<bean id="ds2" parent="parentDataSource">
		<property name="driverClassName" value="..." />
		<property name="url" value="...." />
		<property name="username" value="..." />
		<property name="password" value="..." />
	</bean>

	<bean id="parentDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		abstract="true">
		<property name="...." value="..." />
	</bean>

	<util:map id="targetDataSources">
		<entry key="DS_1" value="ds1" />
		<entry key="DS_2" value="ds2" />
	</util:map>

	<bean id="routerDataSource" class="br.br.com.cd.mvo.orm.multitenancy.RouterDataSource">
		<property name="defaultTargetDataSource" ref="ds1" />
		<property name="targetDataSources" ref="targetDataSources" />
	</bean>

	<!-- Multiple DataSource EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="routerDataSource">
		<property name="jpaVendorAdapter">
			<bean id="jpaVendorAdapter"
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:databasePlatform="org.eclipse.persistence.platform.database.MySQLPlatform"
				p:showSql="true">
			</bean>
			<!-- <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter" 
				p:databasePlatform="org.eclipse.persistence.platform.database.MySQLPlatform" 
				p:showSql="true" /> -->
		</property>
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="jpaPropertyMap" ref="hibernateProperties" />
		<property name="packagesToScan">
			<list>
				<value>app.multitenancy.model</value>
			</list>
		</property>
	</bean>

	<util:map id="hibernateProperties">
		<!-- <entry key="eclipselink.weaving" value="false" /> -->
		<entry key="hibernate.hbm2ddl.auto" value="create" />
		<entry key="hibernate.show_sql" value="true" />
		<entry key="hibernate.format_sql" value="true" />
		<entry key="hibernate.dialect" value="#{jdbc['hibernate.dialect']}" />
		<!-- <entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" 
			/> <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider" 
			/> <entry key="hibernate.cache.use_second_level_cache" value="true" /> -->
		<entry key="hibernate.cache.use_query_cache" value="false" />
		<entry key="hibernate.generate_statistics" value="true" />
	</util:map>


	<!-- Para injetar entityManagerFactory em outro bean, passar a referencia 
		indicando ao spring para devolver o getObject do BeanFactory, usando '&amp;' 
		antes do nome do bean -->
	<!-- EXEMPLO -->
	<!-- <bean id="meuBeanComDependenciaDoEMF" class="app.multitenancy.MeuEMFConfig"> 
		<property name="emf" ref="&amp;entityManagerFactory" /> </bean> -->
	<!-- EXEMPLO -->

	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<!-- <tx:jta-transaction-manager /> <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" 
		/> -->

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Aspecto para preenchimento do DS -->
	<context:load-time-weaver aspectj-weaving="on" />
	<context:spring-configured />

	<bean id="loginInterceptor"
		class="br.cd.mvo4j.test.multitenancy.internal.LoginInterceptor">
		<property name="infraManager" ref="infraManager" />
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />


</beans>
